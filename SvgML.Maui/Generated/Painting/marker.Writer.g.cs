// <auto-generated />
#nullable enable

namespace SvgML;

public partial class marker
{
    protected override void WriteAttributes(TextWriter writer, element parent)
    {
        base.WriteAttributes(writer, parent);

        if (this.IsSet(refXProperty))
        {
            writer.WriteLine($"refX=\"{ToSvgString(refX)}\"");
        }

        if (this.IsSet(refYProperty))
        {
            writer.WriteLine($"refY=\"{ToSvgString(refY)}\"");
        }

        if (this.IsSet(orientProperty))
        {
            writer.WriteLine($"orient=\"{ToSvgString(orient)}\"");
        }

        if (this.IsSet(overflowProperty))
        {
            writer.WriteLine($"overflow=\"{ToSvgString(overflow)}\"");
        }

        if (this.IsSet(viewBoxProperty))
        {
            writer.WriteLine($"viewBox=\"{ToSvgString(viewBox)}\"");
        }

        if (this.IsSet(preserveAspectRatioProperty))
        {
            writer.WriteLine($"preserveAspectRatio=\"{ToSvgString(preserveAspectRatio)}\"");
        }

        if (this.IsSet(markerWidthProperty))
        {
            writer.WriteLine($"markerWidth=\"{ToSvgString(markerWidth)}\"");
        }

        if (this.IsSet(markerHeightProperty))
        {
            writer.WriteLine($"markerHeight=\"{ToSvgString(markerHeight)}\"");
        }

        if (this.IsSet(markerUnitsProperty))
        {
            writer.WriteLine($"markerUnits=\"{ToSvgString(markerUnits)}\"");
        }
    }
}
