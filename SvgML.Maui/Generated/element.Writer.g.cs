// <auto-generated />
#nullable enable

namespace SvgML;

public abstract partial class element
{
    protected virtual void WriteAttributes(TextWriter writer, element parent)
    {
        if (this.IsSet(styleProperty))
        {
            writer.WriteLine($"style=\"{ToSvgString(style)}\"");
        }

        if (this.IsSet(colorProperty))
        {
            writer.WriteLine($"color=\"{ToSvgString(color)}\"");
        }

        if (this.IsSet(transformProperty))
        {
            writer.WriteLine($"transform=\"{ToSvgString(transform)}\"");
        }

        if (this.IsSet(idProperty))
        {
            writer.WriteLine($"id=\"{ToSvgString(id)}\"");
        }

        if (this.IsSet(spProperty))
        {
            writer.WriteLine($"sp=\"{ToSvgString(sp)}\"");
        }

        if (this.IsSet(onclickProperty))
        {
            writer.WriteLine($"onclick=\"{ToSvgString(onclick)}\"");
        }

        if (this.IsSet(onmousedownProperty))
        {
            writer.WriteLine($"onmousedown=\"{ToSvgString(onmousedown)}\"");
        }

        if (this.IsSet(onmouseupProperty))
        {
            writer.WriteLine($"onmouseup=\"{ToSvgString(onmouseup)}\"");
        }

        if (this.IsSet(onmousemoveProperty))
        {
            writer.WriteLine($"onmousemove=\"{ToSvgString(onmousemove)}\"");
        }

        if (this.IsSet(onmousescrollProperty))
        {
            writer.WriteLine($"onmousescroll=\"{ToSvgString(onmousescroll)}\"");
        }

        if (this.IsSet(onmouseoverProperty))
        {
            writer.WriteLine($"onmouseover=\"{ToSvgString(onmouseover)}\"");
        }

        if (this.IsSet(onmouseoutProperty))
        {
            writer.WriteLine($"onmouseout=\"{ToSvgString(onmouseout)}\"");
        }

        if (this.IsSet(fillProperty))
        {
            writer.WriteLine($"fill=\"{ToSvgString(fill)}\"");
        }

        if (this.IsSet(strokeProperty))
        {
            writer.WriteLine($"stroke=\"{ToSvgString(stroke)}\"");
        }

        if (this.IsSet(fill_ruleProperty))
        {
            writer.WriteLine($"fill-rule=\"{ToSvgString(fill_rule)}\"");
        }

        if (this.IsSet(fill_opacityProperty))
        {
            writer.WriteLine($"fill-opacity=\"{ToSvgString(fill_opacity)}\"");
        }

        if (this.IsSet(stroke_widthProperty))
        {
            writer.WriteLine($"stroke-width=\"{ToSvgString(stroke_width)}\"");
        }

        if (this.IsSet(stroke_linecapProperty))
        {
            writer.WriteLine($"stroke-linecap=\"{ToSvgString(stroke_linecap)}\"");
        }

        if (this.IsSet(stroke_linejoinProperty))
        {
            writer.WriteLine($"stroke-linejoin=\"{ToSvgString(stroke_linejoin)}\"");
        }

        if (this.IsSet(stroke_miterlimitProperty))
        {
            writer.WriteLine($"stroke-miterlimit=\"{ToSvgString(stroke_miterlimit)}\"");
        }

        if (this.IsSet(stroke_dasharrayProperty))
        {
            writer.WriteLine($"stroke-dasharray=\"{ToSvgString(stroke_dasharray)}\"");
        }

        if (this.IsSet(stroke_dashoffsetProperty))
        {
            writer.WriteLine($"stroke-dashoffset=\"{ToSvgString(stroke_dashoffset)}\"");
        }

        if (this.IsSet(stroke_opacityProperty))
        {
            writer.WriteLine($"stroke-opacity=\"{ToSvgString(stroke_opacity)}\"");
        }

        if (this.IsSet(opacityProperty))
        {
            writer.WriteLine($"opacity=\"{ToSvgString(opacity)}\"");
        }

        if (this.IsSet(shape_renderingProperty))
        {
            writer.WriteLine($"shape-rendering=\"{ToSvgString(shape_rendering)}\"");
        }

        if (this.IsSet(color_interpolationProperty))
        {
            writer.WriteLine($"color-interpolation=\"{ToSvgString(color_interpolation)}\"");
        }

        if (this.IsSet(color_interpolation_filtersProperty))
        {
            writer.WriteLine($"color-interpolation-filters=\"{ToSvgString(color_interpolation_filters)}\"");
        }

        if (this.IsSet(visibilityProperty))
        {
            writer.WriteLine($"visibility=\"{ToSvgString(visibility)}\"");
        }

        if (this.IsSet(displayProperty))
        {
            writer.WriteLine($"display=\"{ToSvgString(display)}\"");
        }

        if (this.IsSet(text_anchorProperty))
        {
            writer.WriteLine($"text-anchor=\"{ToSvgString(text_anchor)}\"");
        }

        if (this.IsSet(baseline_shiftProperty))
        {
            writer.WriteLine($"baseline-shift=\"{ToSvgString(baseline_shift)}\"");
        }

        if (this.IsSet(font_familyProperty))
        {
            writer.WriteLine($"font-family=\"{ToSvgString(font_family)}\"");
        }

        if (this.IsSet(font_sizeProperty))
        {
            writer.WriteLine($"font-size=\"{ToSvgString(font_size)}\"");
        }

        if (this.IsSet(font_styleProperty))
        {
            writer.WriteLine($"font-style=\"{ToSvgString(font_style)}\"");
        }

        if (this.IsSet(font_variantProperty))
        {
            writer.WriteLine($"font-variant=\"{ToSvgString(font_variant)}\"");
        }

        if (this.IsSet(text_decorationProperty))
        {
            writer.WriteLine($"text-decoration=\"{ToSvgString(text_decoration)}\"");
        }

        if (this.IsSet(font_weightProperty))
        {
            writer.WriteLine($"font-weight=\"{ToSvgString(font_weight)}\"");
        }

        if (this.IsSet(font_stretchProperty))
        {
            writer.WriteLine($"font-stretch=\"{ToSvgString(font_stretch)}\"");
        }

        if (this.IsSet(text_transformProperty))
        {
            writer.WriteLine($"text-transform=\"{ToSvgString(text_transform)}\"");
        }

        if (this.IsSet(fontProperty))
        {
            writer.WriteLine($"font=\"{ToSvgString(font)}\"");
        }
    }
}
