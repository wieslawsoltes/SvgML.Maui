// <auto-generated />
#nullable enable

namespace SvgML;

public partial class font_face : element
{
    protected override string SvgTag => "font-face";

    public static readonly Microsoft.Maui.Controls.BindableProperty alphabeticProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("alphabetic", typeof(float), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty ascentProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("ascent", typeof(float), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty ascent_heightProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("ascent-height", typeof(float), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty descentProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("descent", typeof(float), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty panose_1Property = 
        Microsoft.Maui.Controls.BindableProperty.Create("panose-1", typeof(string), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty units_per_emProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("units-per-em", typeof(float), typeof(font_face));

    public static readonly Microsoft.Maui.Controls.BindableProperty x_heightProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("x-height", typeof(float), typeof(font_face));

    public float alphabetic
    {
        get => (float)GetValue(alphabeticProperty);
        set => SetValue(alphabeticProperty, value);
    }

    public float ascent
    {
        get => (float)GetValue(ascentProperty);
        set => SetValue(ascentProperty, value);
    }

    public float ascent_height
    {
        get => (float)GetValue(ascent_heightProperty);
        set => SetValue(ascent_heightProperty, value);
    }

    public float descent
    {
        get => (float)GetValue(descentProperty);
        set => SetValue(descentProperty, value);
    }

    public string panose_1
    {
        get => (string)GetValue(panose_1Property);
        set => SetValue(panose_1Property, value);
    }

    public float units_per_em
    {
        get => (float)GetValue(units_per_emProperty);
        set => SetValue(units_per_emProperty, value);
    }

    public float x_height
    {
        get => (float)GetValue(x_heightProperty);
        set => SetValue(x_heightProperty, value);
    }
}
