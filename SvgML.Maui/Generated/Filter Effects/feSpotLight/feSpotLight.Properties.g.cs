// <auto-generated />
#nullable enable

namespace SvgML;

public partial class feSpotLight : element
{
    protected override string SvgTag => "feSpotLight";

    public static readonly Microsoft.Maui.Controls.BindableProperty xProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("x", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty yProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("y", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty zProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("z", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty pointsAtXProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("pointsAtX", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty pointsAtYProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("pointsAtY", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty pointsAtZProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("pointsAtZ", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty specularExponentProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("specularExponent", typeof(float), typeof(feSpotLight));

    public static readonly Microsoft.Maui.Controls.BindableProperty limitingConeAngleProperty = 
        Microsoft.Maui.Controls.BindableProperty.Create("limitingConeAngle", typeof(float), typeof(feSpotLight));

    public float x
    {
        get => (float)GetValue(xProperty);
        set => SetValue(xProperty, value);
    }

    public float y
    {
        get => (float)GetValue(yProperty);
        set => SetValue(yProperty, value);
    }

    public float z
    {
        get => (float)GetValue(zProperty);
        set => SetValue(zProperty, value);
    }

    public float pointsAtX
    {
        get => (float)GetValue(pointsAtXProperty);
        set => SetValue(pointsAtXProperty, value);
    }

    public float pointsAtY
    {
        get => (float)GetValue(pointsAtYProperty);
        set => SetValue(pointsAtYProperty, value);
    }

    public float pointsAtZ
    {
        get => (float)GetValue(pointsAtZProperty);
        set => SetValue(pointsAtZProperty, value);
    }

    public float specularExponent
    {
        get => (float)GetValue(specularExponentProperty);
        set => SetValue(specularExponentProperty, value);
    }

    public float limitingConeAngle
    {
        get => (float)GetValue(limitingConeAngleProperty);
        set => SetValue(limitingConeAngleProperty, value);
    }
}
